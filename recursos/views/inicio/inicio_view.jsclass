view_index = {
	Extends : View,
	nodos : [],
	init : function() {
		this.getTheme('inicio');
	},
	menu : {
		name : 'Propgrama Provincial de Fertilizacion Asistida',
		childs : [ {
			name : 'Menu 1',
			childs : [ {
				name : 'Menu 11'
			}, {
				name : 'Menu 12'
			}, {
				name : 'Menu 13'
			} ]
		}, {
			name : 'Menu 2',
			type : 'itemMenuDebug',
			childs : [ {
				name : 'Menu 21'
			}, {
				name : 'Menu 22'
			}, {
				name : 'Menu 23'
			} ]
		}, {
			name : 'Menu 3',
			childs : [ {
				name : 'Menu 31'
			}, {
				name : 'Menu 32'
			}, {
				name : 'Menu 33'
			} ]
		} ]
	},
	parseMenu : function(node) {
		var chileNodes = [];
		if (node.childs) {
			node.childs.each(function(childNode) {
				chileNodes.push(this.parseMenu(childNode));
			}.bind(this));
		}
		var itemMenu = this.getModel((node.type) ? node.type : 'itemMenu', {
			name : node.name,
			sys : this.sys,
			childs : chileNodes
		});
		return itemMenu;
		itemMenu.setNode(pNode);
		var edge;
		chileNodes.each(function(chileNode) {
			edge = arbor.Edge(itemMenu.getNode(), chileNode.getNode(), {
				model : {
					source : itemMenu,
					target : chileNode
				}
			});
			itemMenu.connect({
				node : chileNode,
				edge : edge
			});
		}.bind(this))
		return itemMenu;
	},
	render : function() {
		this.canvas = $("inicio");
		this.ctx = this.canvas.getContext('2d');
		window.addEvent('resize', this.resizeCanvas.bind(this));
		this.resizeCanvas();
		this.sys = arbor.ParticleSystem(1000, 600, 0.5);
		this.sys.parameters({
			stiffness : 50,
			repulsion : 100,
			gravity : false,
			dt : 0.055
		});
		this.sys.screenSize(this.canvas.width, this.canvas.height);
		this.sys.screenPadding(80) // leave an extra 80px of
		this.sys.renderer = {
			init: function(){
				
			},
			redraw : function() {
				this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
				this.sys.eachNode(function(node, pt) {
					// if(!node.data.model.dragging)
					node.data.model.setCenter(pt);
				});
			}.bind(this)
		}
		this.tree = this.getModel((this.menu.type) ? this.menu.type
				: 'itemMenu', {
			name : this.menu.name,
			childs : this.menu.childs,
			sys : this.sys
		});
		this.tree.draw();
		this.tree.drawChilds();
	},
	resizeCanvas : function() {
		var size = this.canvas.getSize();
		this.canvas.setProperties({
			width : size.x,
			height : size.y
		});
	}
}